<MudGrid Justify="Justify.Center">
    @if(Alignment == ParagraphAlign.Center)
    {
        <MudItem xs="@_elemsSizeFull">
            <MudText Typo="Typo.h3" Align="Align.Center" style=@($"color: {Color};")>
                @Title
            </MudText>
            <MudText Typo="Typo.h6" Align="Align.Center">
                <MudMarkdown Value="@Content" />
            </MudText>
        </MudItem>
        <MudItem xs="@_elemsSizeFull">
            <MudStack Spacing="8" Row="true" 
                Justify="Justify.Center" style=@($"color: {Color};")>
                @foreach(var point in BulletPoints){
                    <MudText Typo="Typo.h5" Align="Align.Center">@point</MudText>
                }
            </MudStack>
        </MudItem>
        <MudFlexBreak />
        @if(ImgSrc != String.Empty && ImgSrc != null)
        {
            <MudItem xs="@_elemsSizeFull">
                <div class="d-flex justify-space-around">
                    <MudImage Src="@ImgSrc" ObjectFit="ObjectFit.Cover" 
                        Class="flex-shrink overflow-hidden rounded-xl"
                        Width="@_imgWidth" Height="@_imgHeight" Fluid="true"
                        ObjectPosition="ObjectPosition.Right"/>
                </div>
            </MudItem>
            <MudFlexBreak />
        }
        
        @if(ButtonText != String.Empty){
            <MudItem xs="@_elemsSizeFull">
                <div class="d-flex justify-center my-12">
                    <MudButton Href="@ButtonHref"
                        Size="Size.Large"
                        EndIcon="@ButtonIcon"
                        Variant="Variant.Filled"
                        style=@($"background-color: {Color}; color: {TextColor}")>
                            @ButtonText
                    </MudButton>
                </div>
            </MudItem>
        }
    }
    else
    {
        @if(Alignment == ParagraphAlign.Left)
        {
            <MudItem xs="@_elemsSizeFull" md="@_textGridSizeMd">
                <MudText Typo="Typo.h3" Align="Align.Left" style=@($"color: {Color};")>
                    @Title
                </MudText>
                <MudText Typo="Typo.h6" Align="Align.Left">
                    <MudMarkdown Value="@Content" />
                </MudText>
                 <MudStack>
                    <div style=@($"color: {Color};")>
                        @foreach(var point in BulletPoints){
                            <MudText Typo="Typo.h5" Align="Align.Left">@point</MudText>
                        }
                    </div>
                </MudStack>

                @if(ButtonText != String.Empty){
                    <div class="d-flex justify-start my-12">
                        <MudButton Href="@ButtonHref"
                            Size="Size.Large"
                            EndIcon="@ButtonIcon"
                            Variant="Variant.Filled"
                            style=@($"background-color: {Color}; color: {TextColor}")>
                                @ButtonText
                        </MudButton>
                    </div>
                }

            </MudItem>
        }
         @if(ImgSrc != String.Empty && ImgSrc != null)
        {
            <MudItem xs="@_elemsSizeFull" md="@_imgGridSizeMd">
                <div class="d-flex justify-space-around">
                    <MudImage Src="@ImgSrc" ObjectFit="ObjectFit.Cover" 
                        Class="flex-shrink overflow-hidden rounded-xl"
                        Width="@_imgWidth" Height="@_imgHeight" Fluid="true"
                        ObjectPosition="ObjectPosition.Right"/>
                </div>
            </MudItem>
        }
        @if(Alignment == ParagraphAlign.Right)
        {
            <MudItem xs="@_elemsSizeFull" md="@_textGridSizeMd">
                <MudText Typo="Typo.h3" Align="Align.Right" style=@($"color: {Color};")>
                    @Title
                </MudText>
                <MudText Typo="Typo.h6" Align="Align.Right">
                    <MudMarkdown Value="@Content" />
                </MudText>
                 <MudStack>
                    <div style=@($"color: {Color};")>
                        @foreach(var point in BulletPoints){
                            <MudText Typo="Typo.h5" Align="Align.Right">@point</MudText>
                        }
                    </div>
                </MudStack>

                @if(ButtonText != String.Empty){
                    <div class="d-flex justify-end my-12">
                        <MudButton Href="@ButtonHref"
                            Size="Size.Large"
                            EndIcon="@ButtonIcon"
                            Variant="Variant.Filled"
                            style=@($"background-color: {Color}; color: {TextColor}")>
                                @ButtonText
                        </MudButton>
                    </div>
                }
            </MudItem>
        }
    }
</MudGrid>

@code {
    public enum ParagraphAlign
    {
        Left,
        Right,
        Center
    }

    [Parameter] public ParagraphAlign Alignment { get; set; } = ParagraphAlign.Left;
    [Parameter] public String Color { get; set; } = Colors.Pink.Accent2;
    [Parameter] public String TextColor { get; set; } = Colors.Shades.Black;
    [Parameter] public String ImgSrc { get; set; } = String.Empty;
    [Parameter] public String Title { get; set; } = String.Empty;
    [Parameter] public String Content { get; set; } = String.Empty;
    [Parameter] public List<String> BulletPoints { get; set; } = new();
    [Parameter] public String ButtonText { get; set; } = String.Empty;
    [Parameter] public String ButtonHref { get; set; } = String.Empty;
    [Parameter] public String ButtonIcon { get; set; } = Icons.Material.Rounded.ArrowForward;
    
    

    private int _imgWidth = 700;
    private int _imgHeight = 500;
    private int _elemsSizeFull = 10;
    private int _textGridSizeMd = 4;
    private int _imgGridSizeMd = 6;
}