<div>
    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
        <MudTextField @bind-Value="TextValue" Label="@Label" 
            Immediate="true" OnKeyDown="@OnKeyDown" 
            Variant="Variant.Outlined" Class="mt-0"></MudTextField>
        <MudIconButton OnClick="@InvokeOnSubmitMethod" Icon="@Icons.Material.Filled.Search" 
            Color="Color.Inherit" Class="ml-n14 mt-50%" Disabled="@(!_submitEnabled)"/>
    </MudStack>
</div>

@code{
    [Parameter] public String TextValue { get; set; } = String.Empty;
    [Parameter] public String Label { get; set; } = String.Empty;
    [Parameter] public Func<String, Task>? OnSubmit { get; set; }
    [Parameter] public bool SubmitOnEnter { get; set; } = true;
    bool _submitEnabled { get; set; } = true;

    private async Task InvokeOnSubmitMethod(){
        if(OnSubmit != null && _submitEnabled){
            _submitEnabled = false;
            await OnSubmit.Invoke(TextValue);
            _submitEnabled = true;
        }
        
    }

    private async Task OnKeyDown(KeyboardEventArgs args){
        if (SubmitOnEnter && args.Key=="Enter") 
        {
            await InvokeOnSubmitMethod();
            TextValue = String.Empty;
            StateHasChanged();
        }
    }
}