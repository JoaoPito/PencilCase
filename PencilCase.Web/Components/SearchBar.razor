<div>
    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
        <MudTextField @bind-Value="TextValue" Label="@Label" 
            Immediate="true" OnKeyDown="@OnKeyDown" Disabled="@Disabled"
            Variant="Variant.Outlined" Class="mt-0"></MudTextField>
        <MudIconButton OnClick="@InvokeOnSubmitMethod" Icon="@Icons.Material.Filled.Search" 
            Color="Color.Inherit" Class="ml-n14 mt-50%" Disabled="@Disabled"/>
    </MudStack>
</div>

@code{
    [Parameter] public String TextValue { get; set; } = String.Empty;
    [Parameter] public String Label { get; set; } = String.Empty;
    [Parameter] public Func<String, Task>? OnSubmit { get; set; }
    [Parameter] public bool SubmitOnEnter { get; set; } = true;
    [Parameter] public bool ClearOnSubmit { get; set; } = true;
    [Parameter] public bool Disabled { get; set; } = false;

    private async Task InvokeOnSubmitMethod()
    {
        if(ClearOnSubmit) ClearText();
        if(OnSubmit != null && !Disabled){
            await OnSubmit.Invoke(TextValue);
        }
        
    }

    private void ClearText() 
    {
        TextValue = String.Empty;
        StateHasChanged();
    }

    private async Task OnKeyDown(KeyboardEventArgs args)
    {
        if (SubmitOnEnter && args.Key=="Enter") 
        {
            await InvokeOnSubmitMethod();
        }
    }
}