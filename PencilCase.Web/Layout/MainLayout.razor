@inherits LayoutComponentBase

<MudThemeProvider  @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_customTheme" />
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudLink Href="/" Color="Color.Inherit" Typo="Typo.h5" class="d-flex flex-row align-center">
            <Logo />
        </MudLink>
        <MudSpacer/>    
        <MudToggleIconButton
            Icon="@Icons.Material.Rounded.DarkMode"
            ToggledIcon="@Icons.Material.Filled.WbSunny"
            Color="Color.Inherit" 
            @bind-Toggled="@_isDarkMode"></MudToggleIconButton>
    </MudAppBar>
    <MudMainContent>
            @Body
    </MudMainContent>
</MudLayout>

@code {
    private MudThemeProvider? _mudThemeProvider;
    private bool _drawerOpen = false;
    private bool _isDarkMode = false;

    private readonly MudTheme _customTheme = new()
    {
        PaletteLight = new PaletteLight() 
        {
            AppbarBackground = "#DCDCDC73",
            AppbarText = Colors.Gray.Darken4
        },
        PaletteDark = new PaletteDark()
        {
            AppbarBackground = "#30303073",
            AppbarText = Colors.Gray.Lighten5
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "14px",
        },
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Noto Sans",  "Playwrite CU" },
                FontWeight = 300
            },
            H1 = new H1()
            {
                FontSize = "5.5rem",
                FontWeight = 500
            },
            H2 = new H2()
            {
                FontWeight = 400
            },
            H3 = new H3()
            {
                FontSize = "2.25rem",
                FontWeight = 300
            },
            H4 = new H4()
            {
                FontSize = "2.0rem",
                FontWeight = 200
            },
            Body1 = new Body1()
            {
                FontSize = "1.05rem",
            },
            Button = new Button()
            {
                FontWeight = 500
            }
        }
    };

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    } 

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider != null)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
}